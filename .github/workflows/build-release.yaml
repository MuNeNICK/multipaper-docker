name: Build from Release

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      master_tags:
        required: true
        type: string
      server_tags:
        required: true
        type: string

jobs:
  build_release:
    name: Build image from release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,arm64,arm

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Resolve version & get URLs
        id: get_release
        shell: bash
        run: |
          set -eux

          VERSION_INPUT="${{ inputs.version }}"
          # Try to resolve latest patch for X.Y inputs
          if [[ "$VERSION_INPUT" =~ ^[0-9]+\.[0-9]+$ ]]; then
            FULL_VERSION=$(curl -sSL \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/MultiPaper/MultiPaper/tags" \
              | jq -r --arg prefix "$VERSION_INPUT" '
                [.
                 | select(.name | test("^v?" + $prefix + "\\."))]
                | .[].name
                | ltrimstr("v")
                | sort_by(split(".") | map(tonumber))
                | last
              '
            )
            # Fallback to input if no matching tag found
            if [[ -z "$FULL_VERSION" ]] || [[ "$FULL_VERSION" == "null" ]]; then
              FULL_VERSION="$VERSION_INPUT"
            fi
          else
            # Direct use for full version inputs (strip leading v)
            FULL_VERSION="${VERSION_INPUT#v}"
          fi
          echo "FULL_VERSION=$FULL_VERSION" >> $GITHUB_OUTPUT

          # Fetch version metadata
          RAW=$(curl -sSL -H "Accept: application/json" \
                "https://api.multipaper.io/v2/projects/multipaper/versions/$FULL_VERSION")
          BUILD=$(jq -r '.build' <<<"$RAW")
          APP_NAME=$(jq -r '.downloads.application.name' <<<"$RAW")
          MASTER_NAME=$(jq -r '.downloads.master.name' <<<"$RAW")

          # Output URLs
          echo "MULTIPAPER_URL=https://api.multipaper.io/v2/projects/multipaper/versions/$FULL_VERSION/builds/$BUILD/downloads/$APP_NAME" >> $GITHUB_OUTPUT
          echo "MULTIPAPER_MASTER_URL=https://api.multipaper.io/v2/projects/multipaper/versions/$FULL_VERSION/builds/$BUILD/downloads/$MASTER_NAME" >> $GITHUB_OUTPUT

      - name: Normalize image tags to lowercase
        id: normalize_tags
        shell: bash
        run: |
          echo "MASTER_TAG=$(echo '${{ inputs.master_tags }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "SERVER_TAG=$(echo '${{ inputs.server_tags }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Build base image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: releases/Dockerfile
          push: false
          load: false
          target: base
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: |
            type=gha,scope=release-base
          cache-to: |
            type=gha,scope=release-base,mode=max

      - name: Build multipaper-master ${{ inputs.version }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: releases/Dockerfile
          push: true
          tags: ${{ steps.normalize_tags.outputs.MASTER_TAG }}
          target: master
          build-args: |
            RELEASE_URL=${{ steps.get_release.outputs.MULTIPAPER_MASTER_URL }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: |
            type=gha,scope=release-master-${{ inputs.version }}
            type=gha,scope=release-base
          cache-to: |
            type=gha,scope=release-master-${{ inputs.version }},mode=max

      - name: Build multipaper ${{ inputs.version }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: releases/Dockerfile
          push: true
          tags: ${{ steps.normalize_tags.outputs.SERVER_TAG }}
          target: server
          build-args: |
            RELEASE_URL=${{ steps.get_release.outputs.MULTIPAPER_URL }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          cache-from: |
            type=gha,scope=release-server-${{ inputs.version }}
            type=gha,scope=release-base
          cache-to: |
            type=gha,scope=release-server-${{ inputs.version }},mode=max
